Traceback (most recent call last):
  File "/Users/55093290/anaconda3/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/55093290/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/55093290/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/55093290/anaconda3/lib/python3.11/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/55093290/anaconda3/lib/python3.11/asyncio/base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/55093290/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/55093290/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/55093290/anaconda3/lib/python3.11/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import matplotlib.pyplot as plt

def orthogonality_loss(Q):
    n = Q.shape[1]
    return np.linalg.norm(np.dot(Q.T, Q) - np.eye(n))

sizes = range(5, 101)
loss_gs, loss_hh = [], []

# for n in sizes:
#     A = np.random.rand(n, n)
    
#     Q1, R1 = qr_gramschmidt(A)
#     loss_gs.append(orthogonality_loss(Q1))

#     Q2, R2 = qr_householder(A)
#     loss_hh.append(orthogonality_loss(Q2))

sizes = range(4, 101)
np.random.seed(0)
A = np.random.rand(n, n)
Q1, R1 = qr_gramschmidt(A)
Q2, R2 = qr_householder(A)
for n in sizes:
    loss_gs.append(orthogonality_loss(Q1[:,:n]))
    loss_hh.append(orthogonality_loss(Q2[:,:n]))


fig, ax = plt.subplots()
plt.semilogy(loss_gs, label='Gram-Schmidt')
plt.semilogy(loss_hh, label='Householder')
plt.legend()
plt.xlabel('iteration')
plt.ylabel('loss of orthogonality')

from myst_nb import glue
glue("loss-of-orthogonality-plot", fig, display=False)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Cell [0;32mIn[4], line 21[0m
[1;32m     19[0m sizes [38;5;241m=[39m [38;5;28mrange[39m([38;5;241m4[39m, [38;5;241m101[39m)
[1;32m     20[0m np[38;5;241m.[39mrandom[38;5;241m.[39mseed([38;5;241m0[39m)
[0;32m---> 21[0m A [38;5;241m=[39m np[38;5;241m.[39mrandom[38;5;241m.[39mrand(n, n)
[1;32m     22[0m Q1, R1 [38;5;241m=[39m qr_gramschmidt(A)
[1;32m     23[0m Q2, R2 [38;5;241m=[39m qr_householder(A)

[0;31mNameError[0m: name 'n' is not defined
NameError: name 'n' is not defined

